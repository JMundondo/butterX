datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Trend {
  autoResponses AutoResponse[]
  createdAt     DateTime       @default(now())
  id            String         @id @default(cuid())
  topic         String?
  updatedAt     DateTime       @updatedAt
  volume        Int?
}

model TwitterAccount {
  accessToken       String?
  accessTokenSecret String?
  accountName       String?
  autoResponses     AutoResponse[]
  connected         Boolean?
  createdAt         DateTime       @default(now())
  id                String         @id @default(cuid())
  oauthToken        String?
  oauthTokenSecret  String?
  updatedAt         DateTime       @updatedAt
}

model AutoResponse {
  aiResponse       String?
  content          String?
  createdAt        DateTime        @default(now())
  id               String          @id @default(cuid())
  mediaUrl         String?
  trend            Trend?          @relation(fields: [trendId], references: [id])
  trendId          String?
  twitterAccount   TwitterAccount? @relation(fields: [twitterAccountId], references: [id])
  twitterAccountId String?
  updatedAt        DateTime        @updatedAt
}

model User {
  createdAt     DateTime       @default(now())
  email         String?        @unique
  firstName     String?
  id            String         @id @default(cuid())
  isSubscribed  Boolean?
  isSuperAdmin  Boolean?
  lastName      String?
  password      String
  roles         Json
  subscriptions Subscription[]
  updatedAt     DateTime       @updatedAt
  username      String         @unique
}

model Subscription {
  createdAt      DateTime                @default(now())
  endDate        DateTime?
  id             String                  @id @default(cuid())
  startDate      DateTime?
  status         EnumSubscriptionStatus?
  subscriptionId String?
  updatedAt      DateTime                @updatedAt
  user           User?                   @relation(fields: [userId], references: [id])
  userId         String?
}

enum EnumSubscriptionStatus {
  Option1
}
